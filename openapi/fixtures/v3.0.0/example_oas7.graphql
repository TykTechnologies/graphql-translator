schema {
    query: Query
    mutation: Mutation
}

type Query {
    "Find a device by name."
    findDeviceByName(deviceName: String!): Device
    "Return a device collection."
    findDevices: [Device]
    "Return a user."
    user: User
}

type Mutation {
    "Create and return a device."
    createDevice(deviceInput: DeviceInput!): Device
    "Replace a device by name."
    replaceDeviceByName(deviceInput: DeviceInput!, deviceName: String!): Device
}

"A device is an object connected to the network"
type Device {
    "The device name in the network"
    name: String!
    status: Boolean
    "The device owner Name"
    userName: String!
}

input DeviceInput {
    name: String!
    status: Boolean
    userName: String!
}

"A user represents a natural person"
type User {
    "The legal name of a user"
    name: String
}